<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Hydra</title><link href="https://megankarabin.github.io/my-blog/" rel="alternate"></link><link href="https://megankarabin.github.io/my-blog/feeds/all-en.atom.xml" rel="self"></link><id>https://megankarabin.github.io/my-blog/</id><updated>2019-07-28T15:46:00-04:00</updated><entry><title>Intro to spaCy – Part 1</title><link href="https://megankarabin.github.io/my-blog/blog_4.html" rel="alternate"></link><published>2019-07-28T15:46:00-04:00</published><updated>2019-07-28T15:46:00-04:00</updated><author><name>Megan Karabin</name></author><id>tag:megankarabin.github.io,2019-07-28:/my-blog/blog_4.html</id><summary type="html">&lt;p&gt;spaCy is an NLP tool for language and text processing. The most well-known package for NLP is NLTK, which though it's a robust, well-respected library, comes nowhere near spaCy in terms of user-friendliness when it comes to handling, parsing and presenting language data (IMHO). Although spaCy definitely has ease-of-use on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;spaCy is an NLP tool for language and text processing. The most well-known package for NLP is NLTK, which though it's a robust, well-respected library, comes nowhere near spaCy in terms of user-friendliness when it comes to handling, parsing and presenting language data (IMHO). Although spaCy definitely has ease-of-use on its side, I know there are people out there who are quite comfortable using NLTK. However, there are several features available in spaCy that simply don't exist in NLTK, so hopefully after this tutorial you'll be convinced that spaCy is the way to go! &lt;/p&gt;
&lt;p&gt;In part 1 of this tutorial, I'll go over the basics of spaCy, showing you first how to install and get started, and then helping you to become familiar with some of the core concepts and features built into spaCy.&lt;/p&gt;
&lt;p&gt;&lt;b&gt; Outline&lt;/b&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the NLP and Doc objects&lt;/li&gt;
&lt;li&gt;tokens / tokenization (and lexical attributes of tokens, including parts-of-speech tags, syntactic dependencies, and lemmas, among several others) &lt;/li&gt;
&lt;li&gt;match patterns (spaCy's superior version of regex)&lt;/li&gt;
&lt;li&gt;entity identification&lt;/li&gt;
&lt;li&gt;displaCy &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;displaCy is spaCy's visualization package. With displaCy, we can view the syntactic dependencies of a doc (text object) in really pretty visualizations, as well as label and colour-code entities. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt; 
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt; 
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;altair&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;alt&lt;/span&gt;

&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt; 
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="n"&gt;InlineBackend&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;figure_format&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;retina&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Installing and downloading&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;spacy&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;spacy&lt;/span&gt; &lt;span class="n"&gt;download&lt;/span&gt; &lt;span class="n"&gt;en_core_web_sm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Requirement already satisfied: spacy in /anaconda3/lib/python3.7/site-packages (2.1.6)
Requirement already satisfied: numpy&amp;gt;=1.15.0 in /anaconda3/lib/python3.7/site-packages (from spacy) (1.16.2)
Requirement already satisfied: thinc&amp;lt;7.1.0,&amp;gt;=7.0.8 in /anaconda3/lib/python3.7/site-packages (from spacy) (7.0.8)
Requirement already satisfied: blis&amp;lt;0.3.0,&amp;gt;=0.2.2 in /anaconda3/lib/python3.7/site-packages (from spacy) (0.2.4)
Requirement already satisfied: requests&amp;lt;3.0.0,&amp;gt;=2.13.0 in /anaconda3/lib/python3.7/site-packages (from spacy) (2.21.0)
Requirement already satisfied: cymem&amp;lt;2.1.0,&amp;gt;=2.0.2 in /anaconda3/lib/python3.7/site-packages (from spacy) (2.0.2)
Requirement already satisfied: srsly&amp;lt;1.1.0,&amp;gt;=0.0.6 in /anaconda3/lib/python3.7/site-packages (from spacy) (0.0.7)
Requirement already satisfied: plac&amp;lt;1.0.0,&amp;gt;=0.9.6 in /anaconda3/lib/python3.7/site-packages (from spacy) (0.9.6)
Requirement already satisfied: wasabi&amp;lt;1.1.0,&amp;gt;=0.2.0 in /anaconda3/lib/python3.7/site-packages (from spacy) (0.2.2)
Requirement already satisfied: murmurhash&amp;lt;1.1.0,&amp;gt;=0.28.0 in /anaconda3/lib/python3.7/site-packages (from spacy) (1.0.2)
Requirement already satisfied: preshed&amp;lt;2.1.0,&amp;gt;=2.0.1 in /anaconda3/lib/python3.7/site-packages (from spacy) (2.0.1)
Requirement already satisfied: tqdm&amp;lt;5.0.0,&amp;gt;=4.10.0 in /anaconda3/lib/python3.7/site-packages (from thinc&amp;lt;7.1.0,&amp;gt;=7.0.8-&amp;gt;spacy) (4.31.1)
Requirement already satisfied: urllib3&amp;lt;1.25,&amp;gt;=1.21.1 in /anaconda3/lib/python3.7/site-packages (from requests&amp;lt;3.0.0,&amp;gt;=2.13.0-&amp;gt;spacy) (1.24.1)
Requirement already satisfied: certifi&amp;gt;=2017.4.17 in /anaconda3/lib/python3.7/site-packages (from requests&amp;lt;3.0.0,&amp;gt;=2.13.0-&amp;gt;spacy) (2019.3.9)
Requirement already satisfied: idna&amp;lt;2.9,&amp;gt;=2.5 in /anaconda3/lib/python3.7/site-packages (from requests&amp;lt;3.0.0,&amp;gt;=2.13.0-&amp;gt;spacy) (2.8)
Requirement already satisfied: chardet&amp;lt;3.1.0,&amp;gt;=3.0.2 in /anaconda3/lib/python3.7/site-packages (from requests&amp;lt;3.0.0,&amp;gt;=2.13.0-&amp;gt;spacy) (3.0.4)
Requirement already satisfied: en_core_web_sm==2.1.0 from https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.1.0/en_core_web_sm-2.1.0.tar.gz#egg=en_core_web_sm==2.1.0 in /anaconda3/lib/python3.7/site-packages (2.1.0)
[38;5;2m✔ Download and installation successful[0m
You can now load the model via spacy.load(&amp;#39;en_core_web_sm&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;The NLP object and the Doc object&lt;/h2&gt;
&lt;p&gt;The NLP object contains the processing pipeline. Once instantiated, we can use it to analyze text! &lt;/p&gt;
&lt;p&gt;We instantiate as such: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;spacy.lang.en&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;English&lt;/span&gt;

&lt;span class="n"&gt;nlp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;English&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Next, we pass our text to the nlp object, and assign this to a variable, the standard name is &lt;code&gt;doc&lt;/code&gt;. This &lt;code&gt;doc&lt;/code&gt; variable now contains a Doc object, which we'll see below. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;The alien spaceship travelled 12 billion light years to explore new galaxies.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The alien spaceship travelled 12 billion light years to explore new galaxies.
&amp;lt;class &amp;#39;spacy.tokens.doc.Doc&amp;#39;&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It behaves the same as a python sequence in that you can iterate over and index its contents.&lt;/p&gt;
&lt;p&gt;We can run the &lt;code&gt;.text&lt;/code&gt; method to get the full text contents of the doc object. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;The alien spaceship travelled 12 billion light years to explore new galaxies.&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;spaCy uses statistical models to make predictions based on context, which is critically important when processing language. Without context analysis, there's very little we can say about the words in a given sentence or phrase &amp;mdash; one of the features of key importance of language is that words don't always mean the same thing, depending on where they occur in a sentence and with which other words. &lt;/p&gt;
&lt;p&gt;Things we can do with statstical models: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;parts-of-speech (POS) tagging&lt;/li&gt;
&lt;li&gt;(named) entity identification&lt;/li&gt;
&lt;li&gt;syntactic dependency parsing&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To use one of spaCy's models, you'll need to import spacy, then load a package, such as the &lt;code&gt;en_core_web_sm&lt;/code&gt; package. &lt;/p&gt;
&lt;p&gt;You can use: &lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ python install -m spacy download en_core_web_sm&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;spacy&lt;/span&gt; 

&lt;span class="c1"&gt;# now we&amp;#39;ll simply reinstantiate&lt;/span&gt;
&lt;span class="n"&gt;nlp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;spacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;en_core_web_sm&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# still using our old inputs :P &lt;/span&gt;
&lt;span class="n"&gt;doc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;The SpaceX spaceship travelled 12 billion light years to explore new galaxies.&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Tokens&lt;/h2&gt;
&lt;p&gt;Tokens are just another word for "item". In NLP, any individual, discrete object within the text (e.g., a word, punctuation mark, or number) would be a token. We can access individual tokens in a text by iterating over the doc object, and can thus see what types of tokens it contains, along with their lexical attributes.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Lexical just means "relating to the words or vocabulary of a language", and so a "lexical attribute" is just some feature relating to the words/vocabulary of your doc.&lt;/em&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The
SpaceX
spaceship
travelled
12
billion
light
years
to
explore
new
galaxies
.
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;Mini linguistics refresher:&lt;/h5&gt;
&lt;p&gt;&lt;strong&gt;POS&lt;/strong&gt;: the syntactic category a word (or here, token) belongs to, e.g., noun, verb, adjective&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dependency&lt;/strong&gt;: the grammatical role of a word, relative to the other words in the sentence, e.g. direct/indirect object&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Head&lt;/strong&gt;: the lexical node (on a tree) that governs the word in question&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lemma&lt;/strong&gt;: the base form of a word (its simplest morphological realization), e.g. "run" is the lemma for "running"&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shape&lt;/strong&gt;: not linguistics-related per se, but this one is actually pretty cool &amp;mdash; the shape attribute shows you what the token "looks like" without showing you the token itself (is it a digit, does it contain capital letters, etc.). &lt;/p&gt;
&lt;h3&gt;Lexical Attributes in spaCy&lt;/h3&gt;
&lt;p&gt;The following are some useful and interesting token attributes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;These return boolean values:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;is_alpha  (is it an alphanumeric character)
is_punct  (is it punctuation)
like_num  (is it a number)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;These return the index, the POS, the dependency, the lemma and the shape of a token, respectively:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;i
pos_
dep_
head
lemma_
shape_
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Additional Attributes&lt;/h4&gt;
&lt;p&gt;We can call &lt;code&gt;doc.ents&lt;/code&gt; to get the entities and iterate over this to find the label (i.e., the category) for each entity (which we'll do in a minute) using the &lt;code&gt;label_&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;Below I'll run each of the attributes for every token using list comprehensions and toss those outputs into a dataframe, which will now contain all the relevant lexical information we gathered for each of the tokens. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tokens&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pos_&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;dep&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dep_&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;heads&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;lemmas&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lemma_&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;shapes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shape_&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;token&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pos&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;dependency&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dep&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;head&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;heads&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;lemma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lemmas&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;shape&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;shapes&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;


&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;token&lt;/th&gt;
      &lt;th&gt;pos&lt;/th&gt;
      &lt;th&gt;dependency&lt;/th&gt;
      &lt;th&gt;head&lt;/th&gt;
      &lt;th&gt;lemma&lt;/th&gt;
      &lt;th&gt;shape&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;The&lt;/td&gt;
      &lt;td&gt;DET&lt;/td&gt;
      &lt;td&gt;det&lt;/td&gt;
      &lt;td&gt;spaceship&lt;/td&gt;
      &lt;td&gt;the&lt;/td&gt;
      &lt;td&gt;Xxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;SpaceX&lt;/td&gt;
      &lt;td&gt;PROPN&lt;/td&gt;
      &lt;td&gt;compound&lt;/td&gt;
      &lt;td&gt;spaceship&lt;/td&gt;
      &lt;td&gt;SpaceX&lt;/td&gt;
      &lt;td&gt;XxxxxX&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;td&gt;spaceship&lt;/td&gt;
      &lt;td&gt;NOUN&lt;/td&gt;
      &lt;td&gt;nsubj&lt;/td&gt;
      &lt;td&gt;travelled&lt;/td&gt;
      &lt;td&gt;spaceship&lt;/td&gt;
      &lt;td&gt;xxxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;td&gt;travelled&lt;/td&gt;
      &lt;td&gt;VERB&lt;/td&gt;
      &lt;td&gt;ROOT&lt;/td&gt;
      &lt;td&gt;travelled&lt;/td&gt;
      &lt;td&gt;travel&lt;/td&gt;
      &lt;td&gt;xxxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;NUM&lt;/td&gt;
      &lt;td&gt;compound&lt;/td&gt;
      &lt;td&gt;billion&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;dd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;td&gt;billion&lt;/td&gt;
      &lt;td&gt;NUM&lt;/td&gt;
      &lt;td&gt;nummod&lt;/td&gt;
      &lt;td&gt;years&lt;/td&gt;
      &lt;td&gt;billion&lt;/td&gt;
      &lt;td&gt;xxxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;td&gt;light&lt;/td&gt;
      &lt;td&gt;ADJ&lt;/td&gt;
      &lt;td&gt;amod&lt;/td&gt;
      &lt;td&gt;years&lt;/td&gt;
      &lt;td&gt;light&lt;/td&gt;
      &lt;td&gt;xxxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;td&gt;years&lt;/td&gt;
      &lt;td&gt;NOUN&lt;/td&gt;
      &lt;td&gt;dobj&lt;/td&gt;
      &lt;td&gt;travelled&lt;/td&gt;
      &lt;td&gt;year&lt;/td&gt;
      &lt;td&gt;xxxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;td&gt;to&lt;/td&gt;
      &lt;td&gt;PART&lt;/td&gt;
      &lt;td&gt;aux&lt;/td&gt;
      &lt;td&gt;explore&lt;/td&gt;
      &lt;td&gt;to&lt;/td&gt;
      &lt;td&gt;xx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;9&lt;/th&gt;
      &lt;td&gt;explore&lt;/td&gt;
      &lt;td&gt;VERB&lt;/td&gt;
      &lt;td&gt;advcl&lt;/td&gt;
      &lt;td&gt;travelled&lt;/td&gt;
      &lt;td&gt;explore&lt;/td&gt;
      &lt;td&gt;xxxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;10&lt;/th&gt;
      &lt;td&gt;new&lt;/td&gt;
      &lt;td&gt;ADJ&lt;/td&gt;
      &lt;td&gt;amod&lt;/td&gt;
      &lt;td&gt;galaxies&lt;/td&gt;
      &lt;td&gt;new&lt;/td&gt;
      &lt;td&gt;xxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;11&lt;/th&gt;
      &lt;td&gt;galaxies&lt;/td&gt;
      &lt;td&gt;NOUN&lt;/td&gt;
      &lt;td&gt;dobj&lt;/td&gt;
      &lt;td&gt;explore&lt;/td&gt;
      &lt;td&gt;galaxy&lt;/td&gt;
      &lt;td&gt;xxxx&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;12&lt;/th&gt;
      &lt;td&gt;.&lt;/td&gt;
      &lt;td&gt;PUNCT&lt;/td&gt;
      &lt;td&gt;punct&lt;/td&gt;
      &lt;td&gt;travelled&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
      &lt;td&gt;.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;We can use &lt;code&gt;like_num&lt;/code&gt; to find any numeric tokens in the text. This includes both digits and words for numbers. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;like_num&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Token: {token}   Index: {token.i}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;   &lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
&lt;span class="n"&gt;Token&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;billion&lt;/span&gt;   &lt;span class="n"&gt;Index&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can check to see if the model recognized SpaceX as an entity...&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ent&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ents&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;12 billion light MONEY
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;...Looks like it didn't. "12 billion light" is also &lt;strong&gt;not&lt;/strong&gt; money here.&lt;/p&gt;
&lt;p&gt;However, all is not lost! We can use a special feature called &lt;strong&gt;match patterns&lt;/strong&gt;, along with manually adding this element to our list of entities, &lt;code&gt;doc.ents&lt;/code&gt; (which we'll get to shortly), to set things straight.&lt;/p&gt;
&lt;h2&gt;Match Patterns&lt;/h2&gt;
&lt;p&gt;&lt;img src="https://i.imgur.com/OlxGPEH.jpg" title="source: imgur.com" style='width:400px;' /&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;spacy.matcher&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Matcher&lt;/span&gt;

&lt;span class="c1"&gt;# initialize matcher using vocabulary shared with the nlp object &lt;/span&gt;
&lt;span class="n"&gt;matcher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Matcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vocab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;What do they &lt;b&gt;do? &lt;/b&gt;&lt;/h5&gt;
&lt;p&gt;One of the coolest things about spaCy is its built-in ability to let us search for patterns without having to rely on regular expressions. &lt;strong&gt;Match patterns&lt;/strong&gt; (the spaCy regex equivalent) let you search for a pattern within a text, which can be a string, a doc or a token object &amp;mdash; regular expressions can only take string arguemnts. &lt;/p&gt;
&lt;p&gt;Match patterns also let you customize what &lt;em&gt;kind&lt;/em&gt; of pattern you're looking for &amp;mdash; which isn't always a simple sequence of characters. When we're doing NLP analyses, we might want to look for words belonging to a particular POS category, or words with a particular lemma. For instance, setting the lemma search to "run" would return tokens that contain the base form, such as "running" or "runs". &lt;/p&gt;
&lt;h5&gt;So... what exactly are match patterns? What do they look like?&lt;/h5&gt;
&lt;p&gt;Match patterns are lists of dictionaries, wherein each key is the attribute and each value is the corresponding value you're looking for. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pattern = [{&amp;#39;ATTRIBUTE&amp;#39;: &amp;#39;VALUE&amp;#39;}]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Each dictionary corresponds to exactly one token. If you have more than one dictionary, the list of dictionaries will correspond to a sequence of tokens appearing in that order (if that sequence exists in the doc).&lt;/p&gt;
&lt;p&gt;Let's say we have a doc containing the string &lt;code&gt;"Hello world!"&lt;/code&gt; as well as &lt;code&gt;"it's nice to say hello"&lt;/code&gt;and we want to find all instances of &lt;code&gt;"hello"&lt;/code&gt; where it's followed by a noun, as well as also all instances where it's not.&lt;/p&gt;
&lt;p&gt;&lt;img src="https://imgur.com/zYMm9ox.jpg" title="source: imgur.com" style='width:650px;' /&gt;&lt;/p&gt;
&lt;p&gt;We can use the &lt;code&gt;OP&lt;/code&gt; attribute with the &lt;code&gt;*&lt;/code&gt; key to indicate that this token is optional (i.e., "find this element 0 or more times"). &lt;/p&gt;
&lt;p&gt;&lt;em&gt;For this particular case, this step is somewhat redundant, but I want to illustrate the optional feature in the simplest way possible.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Some attributes for rule-based matching:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;            return bool:

TEXT        IS_ALPHA     IS_LOWER   
LOWER       IS_ASCII     IS_UPPER   
LENGTH      IS_DIGIT     IS_TITLE      
POS         IS_PUNCT     IS_SPACE
OP          IS_STOP
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This &lt;a href="https://explosion.ai/demos/matcher"&gt;Matcher Explorer&lt;/a&gt; is a really cool tool for checking and trying out various match patterns, and if you're using spaCy for text analysis I would highly recommend giving it a whirl! &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# first we set the pattern&lt;/span&gt;
&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;TEXT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SpaceX&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;

&lt;span class="c1"&gt;# then we add the pattern to our matcher&lt;/span&gt;
&lt;span class="n"&gt;matcher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;spacex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# then we pass the text we want to search to the matcher &lt;/span&gt;
&lt;span class="n"&gt;matches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;matches&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[(1533271143234181118, 1, 2)]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The matcher returns a list of tuples, where the first value is the match ID, the second is the start index, and the third is the end index of the match. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;match_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;matched_span&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matched_span&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SpaceX
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Using Matcher: Overview&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Steps:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Import Matcher from &lt;code&gt;spacy.matcher&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Load model (e.g., &lt;code&gt;'en_core_web_sm'&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Create nlp object (if not already previously done) &lt;/li&gt;
&lt;li&gt;Instantiate Matcher with shared vocab (pass in &lt;code&gt;nlp.vocab&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Pass your match pattern to &lt;code&gt;matcher.add&lt;/code&gt;, where:&lt;ul&gt;
&lt;li&gt;argument 1 = a string representing a unique ID of your choosing to identify the pattern &lt;/li&gt;
&lt;li&gt;argument 2 = optional callback (if none, set &lt;code&gt;None&lt;/code&gt;) &lt;/li&gt;
&lt;li&gt;argument 3 = list of token desriptions, i.e., the pattern &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Call matcher on the &lt;code&gt;doc&lt;/code&gt; object (or whatever you've called your doc object) and toss this into a variable (here, I've used &lt;code&gt;matches&lt;/code&gt; to keep things simple)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optional&lt;/strong&gt;: peek at what's inside. Remember the returned tuple contains the match ID, and the start and stop indices of the match. &lt;/li&gt;
&lt;li&gt;To return the match(es) as a string (to actually see what they are &amp;mdash; we might not always know what strings our match is going to return!), use a loop to iterate over each item in the tuple, as demonstrated above.   &lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Hashing, vocab and string stores&lt;/h2&gt;
&lt;p&gt;The way we access the vocabulary in spaCy is through hash IDs and string stores. The vocabulary will depend on which package we passed into &lt;code&gt;spacy.load&lt;/code&gt;, and will contain all the unique tokens within that package / dataset. &lt;/p&gt;
&lt;p&gt;spaCy stores tokens in the vocabulary as hashes, such that every identical token string will have the same hash ID (a unique numeric identifier). Hashes enable memory efficiency since this way, if an identical string occurs multiple times (e.g. the word "the"), it only needs to be stored once in the vocabulary (and not multiple times as a string). &lt;/p&gt;
&lt;p&gt;Every hash corresponds to a string token, and every string will have a corresponding hash. You can use either one to look up the other, as long as that string is already in the vocabulary. &lt;/p&gt;
&lt;p&gt;If the word is new to the vocabulary, we must first hash it (as I'll show below). We can always get the hash of a word by looking up a string (if it's not already there, a new one will be generated), but if the word is new and doesn't yet have a hash, we can't search from hash ID to string (it won't exist!).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# reminder of the contents of our doc object&lt;/span&gt;
&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;The SpaceX spaceship travelled 12 billion light years to explore new galaxies.&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can search for a hash or a string using &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;nlp.vocab.strings[&amp;#39;string&amp;#39;]
nlp.vocab.strings[hash]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;OR&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;doc.vocab.strings[&amp;#39;string&amp;#39;]
doc.vocab.strings[hash]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;where &lt;code&gt;'string'&lt;/code&gt; is the string token you're searching for (or adding to the vocab) and &lt;code&gt;hash&lt;/code&gt; is an integer representing the hash ID of an existing string. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;spaceship_hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vocab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;spaceship&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;spaceship_hash&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2527206094249092639
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# this is what happens when you search for a hash that doesn&amp;#39;t correspond to any string in the vocab&lt;/span&gt;
&lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vocab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4523523&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;---------------------------------------------------------------------------

KeyError                                  Traceback (most recent call last)

&amp;lt;ipython-input-20-4c77b5a5c88e&amp;gt; in &amp;lt;module&amp;gt;
      1 # this is what happens when you search for a hash that doesn&amp;#39;t correspond to any string in the vocab
----&amp;gt; 2 nlp.vocab.strings[4523523]


strings.pyx in spacy.strings.StringStore.__getitem__()


KeyError: &amp;quot;[E018] Can&amp;#39;t retrieve string for hash &amp;#39;4523523&amp;#39;.&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The string for hash 4523523 can't be retrieved because it doesn't match any existing item in the vocab. &lt;/p&gt;
&lt;p&gt;Once we know the hash of a string, we can call it within &lt;code&gt;nlp.vocab.strings&lt;/code&gt; to once again get back the corresponding string. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;spaceship_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vocab&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;spaceship_hash&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;spaceship_string&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;spaceship&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Fixing up our entities&lt;/h3&gt;
&lt;p&gt;You'll recall that spaCy incorrectly identified "12 billion light" as a &lt;code&gt;MONEY&lt;/code&gt; entity, as well as missed SpaceX altogether. SpaceX should be labelled as an organization &amp;ndash; &lt;code&gt;ORG&lt;/code&gt; &amp;ndash; while we can create a "distance" label &amp;ndash; &lt;code&gt;DIST&lt;/code&gt; &amp;ndash; for "light years". &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;TEXT&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;SpaceX&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="n"&gt;spacex_matcher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matcher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;spacex&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;matcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[(1533271143234181118, 1, 2)]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we know the start and stop indices for our SpaceX entity. Let's do the same for "light years"&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;matcher&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Matcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;vocab&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 

&lt;span class="n"&gt;pattern&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LIKE_NUM&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LIKE_NUM&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;POS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ADJ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;POS&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;NOUN&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;

&lt;span class="n"&gt;matcher&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;is_numeric&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;pattern&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;matches&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;matcher&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;matches&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[(14514059297638010452, 4, 8)]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here I'm iterating over my matches to check that &lt;code&gt;matched_span&lt;/code&gt; actually returns what we want it to return, which would indicate that the indices returned by the matcher are correct. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;match_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stop&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;matches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;matched_span&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matched_span&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;light years
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Yep, good to go! &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;matched_span&lt;/code&gt; originally returned the whole phrase, "12 billion light years" because of how I wrote the match pattern. I only want "light years" though, so I just added 2 to the start index, to effectively jump past the first two tokens of the match ("12 billion").&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;spacy.tokens&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Span&lt;/span&gt;

&lt;span class="c1"&gt;# using the start/stop indicies returned to us by the matcher&lt;/span&gt;
&lt;span class="n"&gt;span_1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ORG&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;span_1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;span_1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;span_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Span&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;DIST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;span_2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;span_2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# Setting the doc&amp;#39;s entities using the span object--this also overwrites the existing incorrect entity &lt;/span&gt;
&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ents&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;span_1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;span_2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;# Print entities&amp;#39; text and labels&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;([(&lt;/span&gt;&lt;span class="n"&gt;ent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ent&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;label_&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;ent&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ents&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;SpaceX ORG
light years DIST
[(&amp;#39;SpaceX&amp;#39;, &amp;#39;ORG&amp;#39;), (&amp;#39;light years&amp;#39;, &amp;#39;DIST&amp;#39;)]
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;displaCy&lt;/h2&gt;
&lt;p&gt;This is probably one of my favourite features of spaCy. Maybe as a linguist I'm slightly biased toward neat visual respresentations of syntactic parses, but I also think this tool is just pretty objectively cool. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;displaCy takes your doc object and visually depicts its syntactic dependencies, in addition to providing the POS of each word.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First, import displaCy, then instantiate your nlp and doc objects (if you hadn't already done so previously), and then call &lt;code&gt;displacy.render&lt;/code&gt; on your doc object (or list of docs!). This will return a dependency-parsed sentence!&lt;/p&gt;
&lt;p&gt;It's at this step, within &lt;code&gt;displacy.render&lt;/code&gt;, that you may also specify any additional preferred parameters (which I'll go into more below). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;spacy&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;displacy&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# displacy.serve(doc) returns an html page with your visualization. Useful for longer sentences!&lt;/span&gt;
&lt;span class="c1"&gt;# html = displacy.render(doc) # optional: throw this into a variable, the default in spaCy documentation is &amp;quot;html&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To simplify things a little bit, I'll create two new doc objects called "dogs" and "cats". &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;dogs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Megan loves dogs.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;cats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;nlp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;u&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Mary loves cats.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In &lt;code&gt;displacy.render&lt;/code&gt;, there are two style options: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;dep&lt;/code&gt; returns a visualization of the syntactic dependencies (default)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ent&lt;/code&gt; returns a prettified sentence which highlights the entities it contains. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;displacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;dogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cats&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;displacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;dogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cats&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dep&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="entities" style="line-height: 2.5; direction: ltr"&gt;
&lt;mark class="entity" style="background: #aa9cfc; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em; box-decoration-break: clone; -webkit-box-decoration-break: clone"&gt;
    Megan
    &lt;span style="font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; text-transform: uppercase; vertical-align: middle; margin-left: 0.5rem"&gt;PERSON&lt;/span&gt;
&lt;/mark&gt;
 loves dogs.&lt;/div&gt;

&lt;div class="entities" style="line-height: 2.5; direction: ltr"&gt;
&lt;mark class="entity" style="background: #aa9cfc; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em; box-decoration-break: clone; -webkit-box-decoration-break: clone"&gt;
    Mary
    &lt;span style="font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; text-transform: uppercase; vertical-align: middle; margin-left: 0.5rem"&gt;PERSON&lt;/span&gt;
&lt;/mark&gt;
 loves cats.&lt;/div&gt;

&lt;p&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en" id="525819980ac04fa4b505ff735a09085b-0" class="displacy" width="575" height="224.5" direction="ltr" style="max-width: none; height: 224.5px; color: #000000; background: #ffffff; font-family: Arial; direction: ltr"&gt;
&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="134.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="50"&gt;Megan&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="50"&gt;PROPN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="134.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="225"&gt;loves&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="225"&gt;VERB&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="134.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="400"&gt;dogs.&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="400"&gt;NOUN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-525819980ac04fa4b505ff735a09085b-0-0" stroke-width="2px" d="M70,89.5 C70,2.0 225.0,2.0 225.0,89.5" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-525819980ac04fa4b505ff735a09085b-0-0" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;nsubj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M70,91.5 L62,79.5 78,79.5" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-525819980ac04fa4b505ff735a09085b-0-1" stroke-width="2px" d="M245,89.5 C245,2.0 400.0,2.0 400.0,89.5" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-525819980ac04fa4b505ff735a09085b-0-1" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;dobj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M400.0,91.5 L408.0,79.5 392.0,79.5" fill="currentColor"/&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en" id="525819980ac04fa4b505ff735a09085b-1" class="displacy" width="575" height="224.5" direction="ltr" style="max-width: none; height: 224.5px; color: #000000; background: #ffffff; font-family: Arial; direction: ltr"&gt;
&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="134.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="50"&gt;Mary&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="50"&gt;PROPN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="134.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="225"&gt;loves&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="225"&gt;VERB&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="134.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="400"&gt;cats.&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="400"&gt;NOUN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-525819980ac04fa4b505ff735a09085b-1-0" stroke-width="2px" d="M70,89.5 C70,2.0 225.0,2.0 225.0,89.5" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-525819980ac04fa4b505ff735a09085b-1-0" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;nsubj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M70,91.5 L62,79.5 78,79.5" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-525819980ac04fa4b505ff735a09085b-1-1" stroke-width="2px" d="M245,89.5 C245,2.0 400.0,2.0 400.0,89.5" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-525819980ac04fa4b505ff735a09085b-1-1" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;dobj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M400.0,91.5 L408.0,79.5 392.0,79.5" fill="currentColor"/&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;displacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ent&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="entities" style="line-height: 2.5; direction: ltr"&gt;The 
&lt;mark class="entity" style="background: #7aecec; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em; box-decoration-break: clone; -webkit-box-decoration-break: clone"&gt;
    SpaceX
    &lt;span style="font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; text-transform: uppercase; vertical-align: middle; margin-left: 0.5rem"&gt;ORG&lt;/span&gt;
&lt;/mark&gt;
 spaceship travelled 12 billion 
&lt;mark class="entity" style="background: #ddd; padding: 0.45em 0.6em; margin: 0 0.25em; line-height: 1; border-radius: 0.35em; box-decoration-break: clone; -webkit-box-decoration-break: clone"&gt;
    light years
    &lt;span style="font-size: 0.8em; font-weight: bold; line-height: 1; border-radius: 0.35em; text-transform: uppercase; vertical-align: middle; margin-left: 0.5rem"&gt;DIST&lt;/span&gt;
&lt;/mark&gt;
 to explore new galaxies.&lt;/div&gt;

&lt;h4&gt;Customization&lt;/h4&gt;
&lt;p&gt;The function signature for displaCy is as follows: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Signature&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;displacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;render&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;docs&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dep&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;minify&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;jupyter&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;None&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;={},&lt;/span&gt;
    &lt;span class="n"&gt;manual&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;
&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Docstring&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="n"&gt;Render&lt;/span&gt; &lt;span class="n"&gt;displaCy&lt;/span&gt; &lt;span class="n"&gt;visualisation&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can pass a dictionary of attributes into the &lt;code&gt;options&lt;/code&gt; argument to ultra-customize the viz. Below is a list of valid attributes (option dict keys).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Options:&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;fine_grained
collapse_punct
collapse_phrases
compact
color
bg
font
offset_x
arrow_stroke
arrow_width
arrow_spacing
word_spacing
distance
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We'll go through a few, but to read more about what each of these arguments does, check out the displaCy documentation &lt;a href="https://spacy.io/api/top-level#options"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;word_spacing&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;displacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dep&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en" id="96d4dd14be8b4049a33815b9b3f6ea2f-0" class="displacy" width="575" height="164.5" direction="ltr" style="max-width: none; height: 164.5px; color: #000000; background: #ffffff; font-family: Arial; direction: ltr"&gt;
&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="114.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="50"&gt;Megan&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="50"&gt;PROPN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="114.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="225"&gt;loves&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="225"&gt;VERB&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="114.5"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="400"&gt;dogs.&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="400"&gt;NOUN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-96d4dd14be8b4049a33815b9b3f6ea2f-0-0" stroke-width="2px" d="M70,89.5 C70,2.0 225.0,2.0 225.0,89.5" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-96d4dd14be8b4049a33815b9b3f6ea2f-0-0" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;nsubj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M70,91.5 L62,79.5 78,79.5" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-96d4dd14be8b4049a33815b9b3f6ea2f-0-1" stroke-width="2px" d="M245,89.5 C245,2.0 400.0,2.0 400.0,89.5" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-96d4dd14be8b4049a33815b9b3f6ea2f-0-1" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;dobj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M400.0,91.5 L408.0,79.5 392.0,79.5" fill="currentColor"/&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;distance&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;displacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dogs&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dep&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en" id="76ea456579ed4a3088b0ec76d23fa2ca-0" class="displacy" width="410" height="197.0" direction="ltr" style="max-width: none; height: 197.0px; color: #000000; background: #ffffff; font-family: Arial; direction: ltr"&gt;
&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="107.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="50"&gt;Megan&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="50"&gt;PROPN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="107.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="170"&gt;loves&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="170"&gt;VERB&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="107.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="290"&gt;dogs.&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="290"&gt;NOUN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-76ea456579ed4a3088b0ec76d23fa2ca-0-0" stroke-width="2px" d="M70,62.0 C70,2.0 170.0,2.0 170.0,62.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-76ea456579ed4a3088b0ec76d23fa2ca-0-0" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;nsubj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M70,64.0 L62,52.0 78,52.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-76ea456579ed4a3088b0ec76d23fa2ca-0-1" stroke-width="2px" d="M190,62.0 C190,2.0 290.0,2.0 290.0,62.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-76ea456579ed4a3088b0ec76d23fa2ca-0-1" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;dobj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M290.0,64.0 L298.0,52.0 282.0,52.0" fill="currentColor"/&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;p&gt;In the code block below, I'm populating the &lt;code&gt;options&lt;/code&gt; dictionary with the features I want to adjust:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;word_spacing&lt;/code&gt; sets the (vertical) space between the words and the arrows&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compact&lt;/code&gt; makes the arrows squared to conserve space&lt;/li&gt;
&lt;li&gt;&lt;code&gt;distance&lt;/code&gt; sets the distance between each of the words (basically, the width of the entire viz)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arrow_spacing&lt;/code&gt; sets the space between arrows (so the smaller the int value you pass, the less space between arrows)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;offset_x&lt;/code&gt; is the amount of space between the "edge" of the viz and the first word that appears&lt;/li&gt;
&lt;li&gt;&lt;code&gt;arrow_width&lt;/code&gt; sets the size of the "arrowhead"&lt;/li&gt;
&lt;li&gt;&lt;code&gt;color&lt;/code&gt; sets the color of the text and arrows&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bg&lt;/code&gt; sets the background color.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;word_spacing&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s1"&gt;&amp;#39;compact&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# default&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;distance&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s1"&gt;&amp;#39;arrow_spacing&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s1"&gt;&amp;#39;offset_x&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;arrow_width&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;color&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#ffffff&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s1"&gt;&amp;#39;bg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#0be3df&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;displacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;render&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;doc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;dep&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xml:lang="en" id="acf49c21949b433991d999d0b2113f9c-0" class="displacy" width="1037" height="247.0" direction="ltr" style="max-width: none; height: 247.0px; color: #ffffff; background: #0be3df; font-family: Arial; direction: ltr"&gt;
&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="17"&gt;The&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="17"&gt;DET&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="102"&gt;SpaceX&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="102"&gt;PROPN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="187"&gt;spaceship&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="187"&gt;NOUN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="272"&gt;travelled&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="272"&gt;VERB&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="357"&gt;12&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="357"&gt;NUM&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="442"&gt;billion&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="442"&gt;NUM&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="527"&gt;light&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="527"&gt;ADJ&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="612"&gt;years&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="612"&gt;NOUN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="697"&gt;to&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="697"&gt;PART&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="782"&gt;explore&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="782"&gt;VERB&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="867"&gt;new&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="867"&gt;ADJ&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;text class="displacy-token" fill="currentColor" text-anchor="middle" y="197.0"&gt;
    &lt;tspan class="displacy-word" fill="currentColor" x="952"&gt;galaxies.&lt;/tspan&gt;
    &lt;tspan class="displacy-tag" dy="2em" fill="currentColor" x="952"&gt;NOUN&lt;/tspan&gt;
&lt;/text&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-0" stroke-width="2px" d="M19,172.0 C19,87.0 186.0,87.0 186.0,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-0" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;det&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M19,174.0 L15,166.0 23,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-1" stroke-width="2px" d="M104,172.0 C104,129.5 185.5,129.5 185.5,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-1" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;compound&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M104,174.0 L100,166.0 108,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-2" stroke-width="2px" d="M189,172.0 C189,129.5 270.5,129.5 270.5,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-2" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;nsubj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M189,174.0 L185,166.0 193,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-3" stroke-width="2px" d="M359,172.0 C359,129.5 440.5,129.5 440.5,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-3" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;compound&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M359,174.0 L355,166.0 363,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-4" stroke-width="2px" d="M444,172.0 C444,87.0 611.0,87.0 611.0,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-4" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;nummod&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M444,174.0 L440,166.0 448,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-5" stroke-width="2px" d="M529,172.0 C529,129.5 610.5,129.5 610.5,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-5" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;amod&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M529,174.0 L525,166.0 533,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-6" stroke-width="2px" d="M274,172.0 C274,44.5 611.5,44.5 611.5,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-6" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;dobj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M611.5,174.0 L615.5,166.0 607.5,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-7" stroke-width="2px" d="M699,172.0 C699,129.5 780.5,129.5 780.5,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-7" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;aux&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M699,174.0 L695,166.0 703,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-8" stroke-width="2px" d="M274,172.0 C274,2.0 782.0,2.0 782.0,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-8" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;advcl&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M782.0,174.0 L786.0,166.0 778.0,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-9" stroke-width="2px" d="M869,172.0 C869,129.5 950.5,129.5 950.5,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-9" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;amod&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M869,174.0 L865,166.0 873,166.0" fill="currentColor"/&gt;
&lt;/g&gt;&lt;/p&gt;
&lt;p&gt;&lt;g class="displacy-arrow"&gt;
    &lt;path class="displacy-arc" id="arrow-acf49c21949b433991d999d0b2113f9c-0-10" stroke-width="2px" d="M784,172.0 C784,87.0 951.0,87.0 951.0,172.0" fill="none" stroke="currentColor"/&gt;
    &lt;text dy="1.25em" style="font-size: 0.8em; letter-spacing: 1px"&gt;
        &lt;textPath xlink:href="#arrow-acf49c21949b433991d999d0b2113f9c-0-10" class="displacy-label" startOffset="50%" side="left" fill="currentColor" text-anchor="middle"&gt;dobj&lt;/textPath&gt;
    &lt;/text&gt;
    &lt;path class="displacy-arrowhead" d="M951.0,174.0 L955.0,166.0 947.0,166.0" fill="currentColor"/&gt;
&lt;/g&gt;
&lt;/svg&gt;&lt;/p&gt;
&lt;h3&gt;One last thing...&lt;/h3&gt;
&lt;h3&gt;&lt;code&gt;spacy.explain&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;This method is super great when dealing with abbreviations and shorthands, which tend to be ubiquitous in a package filled with descriptors like "adverbial clause modifier". Not exactly compact. From time to time, we might encounter an abbreviation/label we're unfamiliar with, and in such cases we can call &lt;code&gt;spacy.explain&lt;/code&gt;, which &lt;strong&gt;takes any spaCy abbreviation, shorthand or label as a string argument and returns the full name.&lt;/strong&gt; Check it out:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;spacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;JJ&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;#39;adjective&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here's a few more:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;advcl:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;advcl&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;amod:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;amod&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;nummod:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;nummod&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;ORG:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;spacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ORG&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;advcl&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;adverbial&lt;/span&gt; &lt;span class="n"&gt;clause&lt;/span&gt; &lt;span class="n"&gt;modifier&lt;/span&gt;

&lt;span class="n"&gt;amod&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;adjectival&lt;/span&gt; &lt;span class="n"&gt;modifier&lt;/span&gt;

&lt;span class="n"&gt;nummod&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;numeric&lt;/span&gt; &lt;span class="n"&gt;modifier&lt;/span&gt;

&lt;span class="n"&gt;ORG&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Companies&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;agencies&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;institutions&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;token&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tag_&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;token&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tokens&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;tags&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[&amp;#39;DT&amp;#39;,
 &amp;#39;NNP&amp;#39;,
 &amp;#39;NN&amp;#39;,
 &amp;#39;VBD&amp;#39;,
 &amp;#39;CD&amp;#39;,
 &amp;#39;CD&amp;#39;,
 &amp;#39;JJ&amp;#39;,
 &amp;#39;NNS&amp;#39;,
 &amp;#39;TO&amp;#39;,
 &amp;#39;VB&amp;#39;,
 &amp;#39;JJ&amp;#39;,
 &amp;#39;NNS&amp;#39;,
 &amp;#39;.&amp;#39;]
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;tags_explained&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;spacy&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;explain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can use a simple zip function to create a list of tuples containing each of the tags, along with their respective "definitions". &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;zip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tags_explained&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;[(&amp;#39;DT&amp;#39;, &amp;#39;determiner&amp;#39;),
 (&amp;#39;NNP&amp;#39;, &amp;#39;noun, proper singular&amp;#39;),
 (&amp;#39;NN&amp;#39;, &amp;#39;noun, singular or mass&amp;#39;),
 (&amp;#39;VBD&amp;#39;, &amp;#39;verb, past tense&amp;#39;),
 (&amp;#39;CD&amp;#39;, &amp;#39;cardinal number&amp;#39;),
 (&amp;#39;CD&amp;#39;, &amp;#39;cardinal number&amp;#39;),
 (&amp;#39;JJ&amp;#39;, &amp;#39;adjective&amp;#39;),
 (&amp;#39;NNS&amp;#39;, &amp;#39;noun, plural&amp;#39;),
 (&amp;#39;TO&amp;#39;, &amp;#39;infinitival to&amp;#39;),
 (&amp;#39;VB&amp;#39;, &amp;#39;verb, base form&amp;#39;),
 (&amp;#39;JJ&amp;#39;, &amp;#39;adjective&amp;#39;),
 (&amp;#39;NNS&amp;#39;, &amp;#39;noun, plural&amp;#39;),
 (&amp;#39;.&amp;#39;, &amp;#39;punctuation mark, sentence closer&amp;#39;)]
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Hope you enjoyed this introduction to spaCy (part 1)! Now go have some fun with words 😏&lt;/h4&gt;</content><category term="python"></category><category term="spaCy"></category><category term="NLP"></category></entry><entry><title>Altair to the Rescue</title><link href="https://megankarabin.github.io/my-blog/blog_2.html" rel="alternate"></link><published>2019-07-07T08:00:00-04:00</published><updated>2019-07-07T08:00:00-04:00</updated><author><name>Megan Karabin</name></author><id>tag:megankarabin.github.io,2019-07-07:/my-blog/blog_2.html</id><summary type="html">&lt;h3&gt;Bad charts made better: A beginner-friendly altair tutorial&lt;/h3&gt;
&lt;p&gt;Some charts are confusing, some hard to interpret, and others are just boring, while still others (albeit a special, minority few) require that the rules of math and logic break in order to establish a reality in which they make sense&amp;mdash;though …&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Bad charts made better: A beginner-friendly altair tutorial&lt;/h3&gt;
&lt;p&gt;Some charts are confusing, some hard to interpret, and others are just boring, while still others (albeit a special, minority few) require that the rules of math and logic break in order to establish a reality in which they make sense&amp;mdash;though at first glance, they might not appear as pernicious as they really are. By manipulating data, not only is it possible to tell a story, but to frame it in a way that fits a particular narrative. How we choose to represent data visually is of the utmost importance as a data scientist, of course, but also as anyone who needs to depict information in a meaningful way.&lt;/p&gt;
&lt;p&gt;In this blog, I'll take some bad charts (boring, misleading, logic-breaking, etc.) and remake them into their best selves. &lt;/p&gt;
&lt;p&gt;But first, I'll go over the basics of Altair, walking through the first few steps needed to create a visualization. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;altair&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;alt&lt;/span&gt; 
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;pandas&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;pd&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="kn"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;renderers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enable&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;notebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;✨Before &amp;amp; Afters ✨&lt;/h2&gt;
&lt;h4&gt;Chart 1&lt;/h4&gt;
&lt;p&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images\images\donut-complaints.png" alt="Drawing" style="width: 300px;"/&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="images\images\complaints.svg" alt="Drawing" style="width: 650px;"/&gt; &lt;/td&gt;
    &lt;/tr&gt;&lt;/p&gt;
&lt;h4&gt;Chart 2&lt;/h4&gt;
&lt;p&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images\ghg-emissions.jpeg" alt="Drawing" style="width: 600px;"/&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="images\emissions-1.svg" alt="Drawing" style="width: 700px;"/&gt; &lt;/td&gt;
    &lt;/tr&gt;&lt;/p&gt;
&lt;h4&gt;Chart 3&lt;/h4&gt;
&lt;p&gt;&lt;tr&gt;
    &lt;td&gt; &lt;img src="images\aul-fakenews.jpeg" alt="Drawing" style="width: 500px;"/&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="images\pp-visualization.svg" alt="Drawing" style="width: 500px;"/&gt; &lt;/td&gt;
    &lt;/tr&gt;&lt;/p&gt;
&lt;p&gt;The "bad" chart depicting Ontario's greenhouse gas emissions might actually look a bit prettier than the one I made, but it's not the better viz. Read why below. &lt;/p&gt;
&lt;h2&gt;Making bar charts in Altair&lt;/h2&gt;
&lt;p&gt;&lt;img src="images\donut-complaints.png" alt="Drawing" style="width: 400px;"/&gt; &lt;/p&gt;
&lt;p&gt;&lt;em&gt;This graphic is a breakdown of the discrimination complaints received by the Canadian Human Rights Commission in 2017-18. In that year, disability complaints represented 59% of complaints while 41% of complaints were other.&lt;/em&gt; (From the 2018 Federal budget)&lt;/p&gt;
&lt;p&gt;Humans aren't great at estimating area or visual divisions of area. A donut chart just isn't a great way to compare two proportions visually&amp;mdash;a bar chart works much better. &lt;/p&gt;
&lt;h4&gt;The easiest way to fix this is to spin up a super simple dataset representing these data.&lt;/h4&gt;
&lt;p&gt;Altair charts take pandas dataframes as arguments, so we throw our simple dataset into one with &lt;code&gt;pd.DataFrame()&lt;/code&gt;. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;disability-related&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;other&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;quantity&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;0.59&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.41&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div&gt;
&lt;style scoped&gt;
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
&lt;/style&gt;
&lt;table border="1" class="dataframe"&gt;
  &lt;thead&gt;
    &lt;tr style="text-align: right;"&gt;
      &lt;th&gt;&lt;/th&gt;
      &lt;th&gt;complaint type&lt;/th&gt;
      &lt;th&gt;quantity&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;td&gt;disability-related&lt;/td&gt;
      &lt;td&gt;0.59&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;td&gt;other&lt;/td&gt;
      &lt;td&gt;0.41&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;

&lt;p&gt;Now we'll try out the simplest visualization possible (one that is hopefully already a more successful representation of data than donut chart up there). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum(quantity)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="c1"&gt;# the &amp;#39;x&amp;#39; channel&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# the &amp;#39;y&amp;#39; channel&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;vega.vegalite.VegaLite at 0x109f02908&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/blog-2-altair_24_2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here's a quick breakdown of what's happening here:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;alt.Chart(df)&lt;/code&gt; specifies the data you want to use in your chart (where df = your pandas dataframe)&lt;/p&gt;
&lt;p&gt;&lt;code&gt;.mark_bar()&lt;/code&gt; specifies a bar chart as the type of visualization you want to use. &lt;/p&gt;
&lt;p&gt;&lt;code&gt;.encode()&lt;/code&gt; is where you input (i.e., encode) your chart axes.
 - You can map any column in your dataset to either the 'x' or 'y' encoding channel (each channel corresponds to the x- and y-axis, respectively). 
 - Read more in the Altair documentation &lt;a href="https://altair-viz.github.io/getting_started/starting.html#basic-tutorial-encodings-and-marks"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Using colours&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# setting colour to correspond to the selected column&lt;/span&gt;

&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum(quantity)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;vega.vegalite.VegaLite at 0x10a01aa58&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/blog-2-altair_27_2.png"&gt;&lt;/p&gt;
&lt;p&gt;To set a particular colour scheme, use &lt;code&gt;scale=alt.Scale(scheme='scheme name')&lt;/code&gt; in the &lt;code&gt;alt.Color&lt;/code&gt; method. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;reds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 

&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum(quantity)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;vega.vegalite.VegaLite at 0x10a815e48&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/blog-2-altair_29_2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Here are a few more single-hue colour schemes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;teals&lt;/li&gt;
&lt;li&gt;oranges&lt;/li&gt;
&lt;li&gt;reds &lt;/li&gt;
&lt;li&gt;purples (...you get the point.)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;The following are several more categorical and multi-hue schemes I like:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;plasma&lt;/li&gt;
&lt;li&gt;magma&lt;/li&gt;
&lt;li&gt;accent&lt;/li&gt;
&lt;li&gt;dark2&lt;/li&gt;
&lt;li&gt;set3&lt;/li&gt;
&lt;li&gt;tableau10&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Visit Vega's &lt;a href="https://vega.github.io/vega/docs/schemes/#categorical"&gt;colour scheme page&lt;/a&gt; for even more options!&lt;/p&gt;
&lt;p&gt;A default legend is provided when you set colour on a column to show you what category/value each colour corresponds to. This can be helpful but might actually be redundant, and therefore unnecessary in this case, since the information provieded by the legend is already encoded and labelled on the chart itself. To remove the legend, simply set &lt;code&gt;legend=None&lt;/code&gt; in the color property. It should look something like this:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alt.Color('column to set color on', legend=None)&lt;/code&gt;&lt;/p&gt;
&lt;h4&gt;What if I want to swap the colours of the bars?&lt;/h4&gt;
&lt;p&gt;In the &lt;code&gt;alt.Color()&lt;/code&gt; method, which uses Vega's colour schemes, discrete colours are assigned such that the index of the value in the column you've set &lt;code&gt;color&lt;/code&gt; on matches the index of the colour in the scheme (at the row that corresponds to the number of values present in your column). I encoded the values for &lt;code&gt;'complaint type'&lt;/code&gt; as &lt;code&gt;['disability-related', 'other']&lt;/code&gt;, so the default setting assigns &lt;code&gt;'disability-related'&lt;/code&gt; the lighter, first-appearing colour in the image below at row 2. &lt;/p&gt;
&lt;p&gt;&lt;img src="images/colour_scheme.png" style="width: 400px;"&gt;&lt;/p&gt;
&lt;p&gt;In the &lt;code&gt;domain&lt;/code&gt; argument of Scale &amp;ndash; inside &lt;code&gt;alt.Color(scheme=alt.Scale())&lt;/code&gt;) &amp;ndash; we can rearrange the order of the values so that they correspond to the order of the colours we want to assign them. Since the categories were originally encoded as &lt;code&gt;['disability-related', 'other']&lt;/code&gt;, and we want to switch the colour assignments, we do so such that the order matches the order of the colours&amp;mdash;so, in this case we'd want: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;domain=['other', 'disability-related']&lt;/code&gt;. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Of course alternatively we could just go back and change the order of the values where we first encoded them into the dataset, but this is an easy way to alter things without having to go back and make actual changes to the data. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                  &lt;span class="n"&gt;legend&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                  &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;reds&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;domain&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;other&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;disability-related&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;

&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_bar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum(quantity)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;vega.vegalite.VegaLite at 0x10a8390f0&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/blog-2-altair_36_2.png"&gt;&lt;/p&gt;
&lt;h3&gt;Specifying axis information&lt;/h3&gt;
&lt;p&gt;We use &lt;code&gt;alt.X()&lt;/code&gt; when we want to encode more than just the column name&amp;mdash;maybe we want to include an axis title, formatting (e.g., displaying as percentage, adjusting scale), labels and ticks, etc. &lt;/p&gt;
&lt;p&gt;To add formatting and set the axis title, I'll use &lt;code&gt;alt.Axis()&lt;/code&gt; with the arguments "format", which sets the text formatting pattern, and "title" (as shown in the following code). I like to keep the code in the chart specification as clean as possible, so I prefer building up this extra information outside of the &lt;code&gt;alt.Chart()&lt;/code&gt; function. I'll assign &lt;code&gt;alt.Axis(format='%', title='percentage of total complaints')&lt;/code&gt; to a variable called &lt;code&gt;x_axis&lt;/code&gt; so that I can simply call it from within &lt;code&gt;alt.X()&lt;/code&gt; and pass it as the axis argument. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;percentage of total complaints&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Size&lt;/h3&gt;
&lt;h4&gt;Bars:&lt;/h4&gt;
&lt;p&gt;You can alter the width of the bars by setting &lt;code&gt;size=desired size as float or int&lt;/code&gt; in the &lt;code&gt;mark_*&lt;/code&gt; method, as I've done below to make the bars a bit wider than the default width. &lt;/p&gt;
&lt;h4&gt;Chart:&lt;/h4&gt;
&lt;p&gt;To adjust the size of the chart, we can set custom measurements with &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; in the &lt;code&gt;.properties()&lt;/code&gt; method. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_bar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sum(quantity)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;complaint type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; 
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;

&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Breakdown of complaints made to Canadian Human Rights Commission (2018)&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Title&lt;/h3&gt;
&lt;p&gt;Every chart should have a title&amp;mdash;donut chart is lacking here. To customize your chart title, use &lt;code&gt;chart.configure_title&lt;/code&gt; . &lt;/p&gt;
&lt;p&gt;Some useful attributes: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;anchor&lt;/code&gt; sets the title alignment. Valid inputs are 'start' (right alignment), 'middle' (centre) and 'end' (left). &lt;/li&gt;
&lt;li&gt;&lt;code&gt;orient&lt;/code&gt; set the position of the title. Valid inputs are 'top', 'bottom', 'left' and 'right' (with top/bottom corresponding to above/below the chart). &lt;/li&gt;
&lt;li&gt;&lt;code&gt;fontSize&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;&lt;code&gt;font&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;color&lt;/code&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: By throwing our chart into a variable called &lt;code&gt;chart&lt;/code&gt;, we can access it in other instances without having to repeatedly include all of the code for the visualization. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chart&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Helvetica&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;anchor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;middle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;vega.vegalite.VegaLite at 0x10a83c4e0&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/blog-2-altair_45_2.png"&gt;&lt;/p&gt;
&lt;p&gt;Voilà! Now this data is truly living its best life. &lt;/p&gt;
&lt;h2&gt;Line charts&lt;/h2&gt;
&lt;p&gt;&lt;img src='images/ghg-emissions.jpeg' style="width: 700px;"&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Taken from the provinical government's &lt;a href="http://budget.ontario.ca/2019/chapter-1c.html#c1-20"&gt;2019 budget&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;What's wrong with this picture?&lt;/h3&gt;
&lt;p&gt;There's no unit given for the scale on the y-axis. At first glance, it seems that while Ontario and Canada begin at the same starting point ("1") in 2005, Ontario's GHG emissions decline sharply while "the rest of Canada" experiences little variation over the same period. Notice, however, the incongruency between the title and subtitle (which supposedly describes what's being measured)&amp;mdash;"Ontario &amp;amp; Friends' Greenhouse Gas &lt;em&gt;Emissions&lt;/em&gt; from 2005 to 2016" versus "GHG Emissions &lt;em&gt;Index&lt;/em&gt;". An index of emissions is quite different from actual emissions in a valid unit of measurement, like megatonnes (Mt) of CO2. This is the unit used in the source data, and the unit I'll be using in my reconstructed visualization. &lt;/p&gt;
&lt;p&gt;Just doing some basic data cleaning here so I can access the relevant data from the &lt;a href="http://publications.gc.ca/collections/collection_2018/eccc/En81-4-2016-1-eng.pdf"&gt;National Inventory Report from Environment Canada&lt;/a&gt; (the same source used for the above chart). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read_csv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ghg-emissions-data.csv&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;–&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;2005-2016&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;1990&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;reset_index&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;provinces&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;ordered_vals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt; 
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ordered_vals&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;prov&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;provinces&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;prov&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;emissions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ordered_vals&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;provinces&lt;/span&gt;
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;year&lt;/span&gt;

&lt;span class="n"&gt;nat_drop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;provs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;drop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;nat_drop&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here I've created a dataframe containing data on Canada's greenhouse gas (GHG) emissions and including the number of emissions (in Mt of CO2), the year over which the emissions were released, and the province the emissions came from. &lt;code&gt;provs&lt;/code&gt; is a second dataset not including the national total of emissions, whereas this figure is included in &lt;code&gt;data&lt;/code&gt; .&lt;/p&gt;
&lt;p&gt;There's also a &lt;code&gt;point&lt;/code&gt; argument for the &lt;code&gt;mark_line()&lt;/code&gt; method. If we set &lt;code&gt;point=True&lt;/code&gt;, we get the line as well as a visual representation of each of the individual data points it intersects. This can be useful for when the data is on the sparse side, and makes it clear where the actual data sit. Remember, unless you have an inordinate number of datapoints, the line is just the trend between two points. Anywhere on the line &lt;em&gt;between&lt;/em&gt; two points&amp;mdash;say, Canada's line at the x-value halfway between 2012 and 2013&amp;mdash;isn't necessarily representative of the true y-values (emissions) at that value of x (circa July 2012). &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;chart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;provs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;year:N&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;emissions:Q&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;province:N&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                   &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                   &lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;category20&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;GHG emissions by province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;chart&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure_axisX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labelAngle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# this sets the angle of the x-ticks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;vega.vegalite.VegaLite at 0x1092646d8&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/blog-2-altair_55_2.png"&gt;&lt;/p&gt;
&lt;p&gt;As we can see, Ontario is actually still producing a far greater quantity of emissions than any other province except for Alberta. The following is the text accompanying the original chart:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ontario has been a leader in the efforts to tackle climate change. Compared with 2005, the province’s total greenhouse gas emissions have dropped by 22 per cent — even while the rest of Canada saw emissions increase by three per cent during the same time period.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In splitting the data this way (Ontario vs. the rest of Canada) the trend observed for "the rest of Canada" is highly influenced by Alberta's emissions. That is, the only reason the rest of Canada saw a 3% increase in emissions is because Alberta saw a substantial increase, while most other provinces either stayed the same or saw a decrease in emissions. &lt;/p&gt;
&lt;p&gt;&lt;img src='images/i-see-u.jpeg' style="width: 200px;"&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;canada_tot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;ontario&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ON&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;ontario&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;emissions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;emissions_on&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;province_on&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;inplace&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;can_on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;canada_tot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ontario&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="c1"&gt;# Subtracting Ontario&amp;#39;s yearly emissions from Canada&amp;#39;s total yearly emissions in order to plot&lt;/span&gt;
&lt;span class="c1"&gt;# Ontario against the rest of Canada&lt;/span&gt;
&lt;span class="n"&gt;rest_of_canada&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;can_on&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;emissions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;           
    &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;can_on&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;can_on&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;emissions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;can_on&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iloc&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;rest_of_canada&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="n"&gt;can_on&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;rest_of_canada&lt;/span&gt;

&lt;span class="n"&gt;rest_of_canada&lt;/span&gt; &lt;span class="c1"&gt;# this now includes all the values of GHG emissions from every province but Ontario. &lt;/span&gt;


&lt;span class="c1"&gt;# spinning up a new dataframe with the values for the rest of Canada&lt;/span&gt;
&lt;span class="n"&gt;canada_minus_on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;emissions&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;rest_of_canada&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
    &lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;\
                 &lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; 
    &lt;span class="s1"&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2005&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2011&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2014&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2016&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="n"&gt;totals&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;provs&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;canada_minus_on&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# comparing Ontario and the rest of Canada&lt;/span&gt;
&lt;span class="n"&gt;can_vs_on&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;totals&lt;/span&gt;&lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;totals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rest_of_canada&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;totals&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;province&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;ON&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/anaconda3/lib/python3.7/site-packages/pandas/core/frame.py:4025: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  return super(DataFrame, self).rename(**kwargs)
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Finally, a slightly more accurate visual depiction of these data.&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;emissions (in Mt of CO2)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;chart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;can_vs_on&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_line&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;point&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;year:N&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;emissions:Q&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;province:N&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                   &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                   &lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;plasma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                   &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Ontario and the Rest of Canada&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;s GHG Emissions from 2005 to 2016&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;chart&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure_axisX&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;labelAngle&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# this sets the angle of the x-ticks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;vega.vegalite.VegaLite at 0x10a83c6d8&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/blog-2-altair_60_2.png"&gt;&lt;/p&gt;
&lt;p&gt;From this representation, it's clear that Ontario and the rest of Canada have drastically different starting points&amp;mdash;quite contrary to what the chart from the budget would have you think!&lt;/p&gt;
&lt;h2&gt;More line charts&lt;/h2&gt;
&lt;p&gt;&lt;img src="images/aul-fakenews.jpeg" style="width: 600px;"&gt;  &lt;/p&gt;
&lt;h4&gt;What's wrong with this picture?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No scale for y-axis&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Missing axis labels&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Differing y-axes for each line, since the number of prevention services performed in 2013 still far exceeds the number of abortions (in the order of 600,000), and yet the prevention data at 2013 is depicted as below the data for abortions at the exact same x-value. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src='images/side-eye.png' style="width: 300px;"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You'll also notice the slopes of the lines are about the same, upon quick visual inspection. The difference between abortions performed in 2006 (289,750) and those performed in 2013 (327,000) is much less than the difference between prevention services performed in 2006 (2,007,371) and those performed in 2013 (935,573). We can further quantify this by comparing the slopes: &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;The slope of A (abortions) is: {round((327_000 - 289_750) / (2013 - 2006), 2)}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;The slope of B (cancer screening and prevention services) is: {(935_573 - 2_007_371) / (2013 - 2006)}&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The slope of A (abortions) is: 5321.43
The slope of B (cancer screening and prevention services) is: -153114.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;center&gt; 
$m_A = 5321.43$&lt;/p&gt;
&lt;p&gt;&lt;center&gt;
$m_B = -153114.0$&lt;/p&gt;
&lt;p&gt;&lt;/center&gt;
 &lt;/center&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Every year (i.e., for every 1 unit in increase along the x-axis), there are 5321 more abortions performed.&lt;/p&gt;
&lt;p&gt;Every year, there are 153114 fewer prevention and screening services performed. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;aul_df&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DataFrame&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;service&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;abortion&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;abortion&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cancer screening &amp;amp; prevention&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \
                &lt;span class="s1"&gt;&amp;#39;cancer screening &amp;amp; prevention&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;services performed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:[&lt;/span&gt;&lt;span class="mi"&gt;289&lt;/span&gt;&lt;span class="n"&gt;_750&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;327&lt;/span&gt;&lt;span class="n"&gt;_000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;_007_371&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;985&lt;/span&gt;&lt;span class="n"&gt;_573&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2006&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2006&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2013&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;

&lt;span class="n"&gt;aul_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;pd&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;to_datetime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aul_df&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;year&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;%Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;aul_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;services performed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;aul_df&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;services performed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;titleFontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;y_axis&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Axis&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Services Performed (in thousands)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;titleFontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;13&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;service&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;magma&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;   

&lt;span class="n"&gt;ppchart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;aul_df&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mark_line&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;x_axis&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;alt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;services performed&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axis&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;y_axis&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;

&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;properties&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Planned Parenthood Services Performed in 2006 and 2013&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;400&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;ppchart&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;anchor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;middle&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;fontSize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Helvetica&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;ppchart&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;configure_legend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;columns&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;strokeColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;gray&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;fillColor&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#EEEEEE&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;cornerRadius&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;orient&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;top-right&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;lt;vega.vegalite.VegaLite at 0x10acf5860&amp;gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="png" src="images/blog-2-altair_70_2.png"&gt;&lt;/p&gt;
&lt;p&gt;How this chart is better: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;uses a valid, to-scale y-axis &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;labels for both axes &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it has a consistent, shared y-axis for both lines.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Hope you enjoyed! Good luck making great visualizations with Altair 🚀&lt;/h3&gt;</content><category term="python"></category><category term="altair"></category><category term="data visualization"></category></entry></feed>